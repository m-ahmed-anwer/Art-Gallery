package com.beefe.permission;

import android.Manifest;
import android.app.Activity;
import android.content.pm.PackageManager;
import android.support.v4.content.ContextCompat;

import com.facebook.react.bridge.BaseJavaModule;
import com.facebook.react.bridge.Callback;
import com.facebook.react.bridge.ReactMethod;

import java.util.HashMap;
import java.util.Map;

import javax.annotation.Nullable;

/**
 * Created by heng on 16/5/11.
 */
public class PermissionModule extends BaseJavaModule {

    private Activity activity;

    private final static String REACT_CLASS = "Permission";

    private final static String READ_CONTACTS = "READ_CONTACTS";
    private final static String ACCESS_FINE_LOCATION = "ACCESS_FINE_LOCATION";
    private final static String ACCESS_COARSE_LOCATION = "ACCESS_COARSE_LOCATION";
    private final static String READ_CALL_LOG = "READ_CALL_LOG";


    public PermissionModule(Activity activity) {
        this.activity = activity;
    }

    @Override
    public String getName() {
        return REACT_CLASS;
    }

    @Nullable
    @Override
    public Map<String, Object> getConstants() {
        final Map<String, Object> constants = new HashMap<>();
        constants.put(READ_CONTACTS, Manifest.permission.READ_CONTACTS);
        constants.put(ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_FINE_LOCATION);
        constants.put(ACCESS_COARSE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION);
        constants.put(READ_CALL_LOG, Manifest.permission.READ_CALL_LOG);
        return constants;
    }

    @ReactMethod
    public void hasPermission(String permission, Callback callback) {
        try {
            int permissionCheck = ContextCompat.checkSelfPermission(activity, permission);
            if (callback != null) {
                callback.invoke(null, permissionCheck);
            }
        } catch (IllegalArgumentException e) {
            if (callback != null) {
                callback.invoke(e.getMessage(), PackageManager.PERMISSION_DENIED);
            }
        }
    }
}
